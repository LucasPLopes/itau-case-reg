version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: unless-stopped
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - app-network
    restart: unless-stopped

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    container_name: ZooKeeper_teste
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-network
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka:
    image: 'bitnami/kafka:3.4'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true # Permitir criação automática de tópicos
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1 # Fator de replicação padrão
      - KAFKA_CFG_NUM_PARTITIONS=1 # Numero de partições padrão
    depends_on:
      - zookeeper
    networks:
      - app-network
    volumes:
      - kafka_data:/bitnami/kafka

volumes:
  zookeeper_data:
  kafka_data:
